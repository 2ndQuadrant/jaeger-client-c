/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: jaeger.proto */

#ifndef PROTOBUF_C_jaeger_2eproto__INCLUDED
#define PROTOBUF_C_jaeger_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Jaegertracing__Protobuf__Tag Jaegertracing__Protobuf__Tag;
typedef struct _Jaegertracing__Protobuf__Log Jaegertracing__Protobuf__Log;
typedef struct _Jaegertracing__Protobuf__TraceID Jaegertracing__Protobuf__TraceID;
typedef struct _Jaegertracing__Protobuf__SpanRef Jaegertracing__Protobuf__SpanRef;
typedef struct _Jaegertracing__Protobuf__Span Jaegertracing__Protobuf__Span;
typedef struct _Jaegertracing__Protobuf__Process Jaegertracing__Protobuf__Process;
typedef struct _Jaegertracing__Protobuf__Batch Jaegertracing__Protobuf__Batch;
typedef struct _Jaegertracing__Protobuf__BatchResponse Jaegertracing__Protobuf__BatchResponse;


/* --- enums --- */

typedef enum _Jaegertracing__Protobuf__SpanRef__Type {
  JAEGERTRACING__PROTOBUF__SPAN_REF__TYPE__CHILD_OF = 0,
  JAEGERTRACING__PROTOBUF__SPAN_REF__TYPE__FOLLOWS_FROM = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(JAEGERTRACING__PROTOBUF__SPAN_REF__TYPE)
} Jaegertracing__Protobuf__SpanRef__Type;

/* --- messages --- */

typedef enum {
  JAEGERTRACING__PROTOBUF__TAG__VALUE__NOT_SET = 0,
  JAEGERTRACING__PROTOBUF__TAG__VALUE_STR_VALUE = 2,
  JAEGERTRACING__PROTOBUF__TAG__VALUE_DOUBLE_VALUE = 3,
  JAEGERTRACING__PROTOBUF__TAG__VALUE_BOOL_VALUE = 4,
  JAEGERTRACING__PROTOBUF__TAG__VALUE_LONG_VALUE = 5,
  JAEGERTRACING__PROTOBUF__TAG__VALUE_BINARY_VALUE = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(JAEGERTRACING__PROTOBUF__TAG__VALUE)
} Jaegertracing__Protobuf__Tag__ValueCase;

struct  _Jaegertracing__Protobuf__Tag
{
  ProtobufCMessage base;
  char *key;
  Jaegertracing__Protobuf__Tag__ValueCase value_case;
  union {
    char *str_value;
    double double_value;
    protobuf_c_boolean bool_value;
    int64_t long_value;
    ProtobufCBinaryData binary_value;
  };
};
#define JAEGERTRACING__PROTOBUF__TAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__tag__descriptor) \
    , (char *)protobuf_c_empty_string, JAEGERTRACING__PROTOBUF__TAG__VALUE__NOT_SET, {0} }


struct  _Jaegertracing__Protobuf__Log
{
  ProtobufCMessage base;
  int64_t timestamp;
  size_t n_fields;
  Jaegertracing__Protobuf__Tag **fields;
};
#define JAEGERTRACING__PROTOBUF__LOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__log__descriptor) \
    , 0, 0,NULL }


struct  _Jaegertracing__Protobuf__TraceID
{
  ProtobufCMessage base;
  uint64_t high;
  uint64_t low;
};
#define JAEGERTRACING__PROTOBUF__TRACE_ID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__trace_id__descriptor) \
    , 0, 0 }


struct  _Jaegertracing__Protobuf__SpanRef
{
  ProtobufCMessage base;
  Jaegertracing__Protobuf__SpanRef__Type type;
  Jaegertracing__Protobuf__TraceID *trace_id;
  uint64_t span_id;
};
#define JAEGERTRACING__PROTOBUF__SPAN_REF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__span_ref__descriptor) \
    , JAEGERTRACING__PROTOBUF__SPAN_REF__TYPE__CHILD_OF, NULL, 0 }


struct  _Jaegertracing__Protobuf__Span
{
  ProtobufCMessage base;
  Jaegertracing__Protobuf__TraceID *trace_id;
  uint64_t span_id;
  uint64_t parent_span_id;
  char *operation_name;
  size_t n_references;
  Jaegertracing__Protobuf__SpanRef **references;
  int32_t flags;
  int64_t start_time;
  int64_t duration;
  size_t n_tags;
  Jaegertracing__Protobuf__Tag **tags;
  size_t n_logs;
  Jaegertracing__Protobuf__Log **logs;
};
#define JAEGERTRACING__PROTOBUF__SPAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__span__descriptor) \
    , NULL, 0, 0, (char *)protobuf_c_empty_string, 0,NULL, 0, 0, 0, 0,NULL, 0,NULL }


struct  _Jaegertracing__Protobuf__Process
{
  ProtobufCMessage base;
  char *service_name;
  size_t n_tags;
  Jaegertracing__Protobuf__Tag **tags;
};
#define JAEGERTRACING__PROTOBUF__PROCESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__process__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _Jaegertracing__Protobuf__Batch
{
  ProtobufCMessage base;
  Jaegertracing__Protobuf__Process *process;
  size_t n_spans;
  Jaegertracing__Protobuf__Span **spans;
};
#define JAEGERTRACING__PROTOBUF__BATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__batch__descriptor) \
    , NULL, 0,NULL }


struct  _Jaegertracing__Protobuf__BatchResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define JAEGERTRACING__PROTOBUF__BATCH_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__batch_response__descriptor) \
    , 0 }


/* Jaegertracing__Protobuf__Tag methods */
void   jaegertracing__protobuf__tag__init
                     (Jaegertracing__Protobuf__Tag         *message);
size_t jaegertracing__protobuf__tag__get_packed_size
                     (const Jaegertracing__Protobuf__Tag   *message);
size_t jaegertracing__protobuf__tag__pack
                     (const Jaegertracing__Protobuf__Tag   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__tag__pack_to_buffer
                     (const Jaegertracing__Protobuf__Tag   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Tag *
       jaegertracing__protobuf__tag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__tag__free_unpacked
                     (Jaegertracing__Protobuf__Tag *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__Log methods */
void   jaegertracing__protobuf__log__init
                     (Jaegertracing__Protobuf__Log         *message);
size_t jaegertracing__protobuf__log__get_packed_size
                     (const Jaegertracing__Protobuf__Log   *message);
size_t jaegertracing__protobuf__log__pack
                     (const Jaegertracing__Protobuf__Log   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__log__pack_to_buffer
                     (const Jaegertracing__Protobuf__Log   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Log *
       jaegertracing__protobuf__log__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__log__free_unpacked
                     (Jaegertracing__Protobuf__Log *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__TraceID methods */
void   jaegertracing__protobuf__trace_id__init
                     (Jaegertracing__Protobuf__TraceID         *message);
size_t jaegertracing__protobuf__trace_id__get_packed_size
                     (const Jaegertracing__Protobuf__TraceID   *message);
size_t jaegertracing__protobuf__trace_id__pack
                     (const Jaegertracing__Protobuf__TraceID   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__trace_id__pack_to_buffer
                     (const Jaegertracing__Protobuf__TraceID   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__TraceID *
       jaegertracing__protobuf__trace_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__trace_id__free_unpacked
                     (Jaegertracing__Protobuf__TraceID *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__SpanRef methods */
void   jaegertracing__protobuf__span_ref__init
                     (Jaegertracing__Protobuf__SpanRef         *message);
size_t jaegertracing__protobuf__span_ref__get_packed_size
                     (const Jaegertracing__Protobuf__SpanRef   *message);
size_t jaegertracing__protobuf__span_ref__pack
                     (const Jaegertracing__Protobuf__SpanRef   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__span_ref__pack_to_buffer
                     (const Jaegertracing__Protobuf__SpanRef   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__SpanRef *
       jaegertracing__protobuf__span_ref__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__span_ref__free_unpacked
                     (Jaegertracing__Protobuf__SpanRef *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__Span methods */
void   jaegertracing__protobuf__span__init
                     (Jaegertracing__Protobuf__Span         *message);
size_t jaegertracing__protobuf__span__get_packed_size
                     (const Jaegertracing__Protobuf__Span   *message);
size_t jaegertracing__protobuf__span__pack
                     (const Jaegertracing__Protobuf__Span   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__span__pack_to_buffer
                     (const Jaegertracing__Protobuf__Span   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Span *
       jaegertracing__protobuf__span__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__span__free_unpacked
                     (Jaegertracing__Protobuf__Span *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__Process methods */
void   jaegertracing__protobuf__process__init
                     (Jaegertracing__Protobuf__Process         *message);
size_t jaegertracing__protobuf__process__get_packed_size
                     (const Jaegertracing__Protobuf__Process   *message);
size_t jaegertracing__protobuf__process__pack
                     (const Jaegertracing__Protobuf__Process   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__process__pack_to_buffer
                     (const Jaegertracing__Protobuf__Process   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Process *
       jaegertracing__protobuf__process__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__process__free_unpacked
                     (Jaegertracing__Protobuf__Process *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__Batch methods */
void   jaegertracing__protobuf__batch__init
                     (Jaegertracing__Protobuf__Batch         *message);
size_t jaegertracing__protobuf__batch__get_packed_size
                     (const Jaegertracing__Protobuf__Batch   *message);
size_t jaegertracing__protobuf__batch__pack
                     (const Jaegertracing__Protobuf__Batch   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__batch__pack_to_buffer
                     (const Jaegertracing__Protobuf__Batch   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Batch *
       jaegertracing__protobuf__batch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__batch__free_unpacked
                     (Jaegertracing__Protobuf__Batch *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__BatchResponse methods */
void   jaegertracing__protobuf__batch_response__init
                     (Jaegertracing__Protobuf__BatchResponse         *message);
size_t jaegertracing__protobuf__batch_response__get_packed_size
                     (const Jaegertracing__Protobuf__BatchResponse   *message);
size_t jaegertracing__protobuf__batch_response__pack
                     (const Jaegertracing__Protobuf__BatchResponse   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__batch_response__pack_to_buffer
                     (const Jaegertracing__Protobuf__BatchResponse   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__BatchResponse *
       jaegertracing__protobuf__batch_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__batch_response__free_unpacked
                     (Jaegertracing__Protobuf__BatchResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Jaegertracing__Protobuf__Tag_Closure)
                 (const Jaegertracing__Protobuf__Tag *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__Log_Closure)
                 (const Jaegertracing__Protobuf__Log *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__TraceID_Closure)
                 (const Jaegertracing__Protobuf__TraceID *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__SpanRef_Closure)
                 (const Jaegertracing__Protobuf__SpanRef *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__Span_Closure)
                 (const Jaegertracing__Protobuf__Span *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__Process_Closure)
                 (const Jaegertracing__Protobuf__Process *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__Batch_Closure)
                 (const Jaegertracing__Protobuf__Batch *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__BatchResponse_Closure)
                 (const Jaegertracing__Protobuf__BatchResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Jaegertracing__Protobuf__Collector_Service Jaegertracing__Protobuf__Collector_Service;
struct _Jaegertracing__Protobuf__Collector_Service
{
  ProtobufCService base;
  void (*submit_batches)(Jaegertracing__Protobuf__Collector_Service *service,
                         const Jaegertracing__Protobuf__Batch *input,
                         Jaegertracing__Protobuf__BatchResponse_Closure closure,
                         void *closure_data);
};
typedef void (*Jaegertracing__Protobuf__Collector_ServiceDestroy)(Jaegertracing__Protobuf__Collector_Service *);
void jaegertracing__protobuf__collector__init (Jaegertracing__Protobuf__Collector_Service *service,
                                               Jaegertracing__Protobuf__Collector_ServiceDestroy destroy);
#define JAEGERTRACING__PROTOBUF__COLLECTOR__BASE_INIT \
    { &jaegertracing__protobuf__collector__descriptor, protobuf_c_service_invoke_internal, NULL }
#define JAEGERTRACING__PROTOBUF__COLLECTOR__INIT(function_prefix__) \
    { JAEGERTRACING__PROTOBUF__COLLECTOR__BASE_INIT,\
      function_prefix__ ## submit_batches  }
void jaegertracing__protobuf__collector__submit_batches(ProtobufCService *service,
                                                        const Jaegertracing__Protobuf__Batch *input,
                                                        Jaegertracing__Protobuf__BatchResponse_Closure closure,
                                                        void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor jaegertracing__protobuf__tag__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__log__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__trace_id__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__span_ref__descriptor;
extern const ProtobufCEnumDescriptor    jaegertracing__protobuf__span_ref__type__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__span__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__process__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__batch__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__batch_response__descriptor;
extern const ProtobufCServiceDescriptor jaegertracing__protobuf__collector__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_jaeger_2eproto__INCLUDED */
