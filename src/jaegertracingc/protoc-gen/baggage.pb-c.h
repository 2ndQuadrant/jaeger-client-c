/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: baggage.proto */

#ifndef PROTOBUF_C_baggage_2eproto__INCLUDED
#define PROTOBUF_C_baggage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Jaegertracing__Protobuf__Baggage__BaggageRestriction Jaegertracing__Protobuf__Baggage__BaggageRestriction;
typedef struct _Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest;
typedef struct _Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse;


/* --- enums --- */


/* --- messages --- */

struct  _Jaegertracing__Protobuf__Baggage__BaggageRestriction
{
  ProtobufCMessage base;
  char *baggage_key;
  int32_t max_value_length;
};
#define JAEGERTRACING__PROTOBUF__BAGGAGE__BAGGAGE_RESTRICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__baggage__baggage_restriction__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest
{
  ProtobufCMessage base;
  char *service_name;
};
#define JAEGERTRACING__PROTOBUF__BAGGAGE__BAGGAGE_RESTRICTION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__baggage__baggage_restriction_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse
{
  ProtobufCMessage base;
  size_t n_restrictions;
  Jaegertracing__Protobuf__Baggage__BaggageRestriction **restrictions;
};
#define JAEGERTRACING__PROTOBUF__BAGGAGE__BAGGAGE_RESTRICTION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jaegertracing__protobuf__baggage__baggage_restriction_response__descriptor) \
    , 0,NULL }


/* Jaegertracing__Protobuf__Baggage__BaggageRestriction methods */
void   jaegertracing__protobuf__baggage__baggage_restriction__init
                     (Jaegertracing__Protobuf__Baggage__BaggageRestriction         *message);
size_t jaegertracing__protobuf__baggage__baggage_restriction__get_packed_size
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestriction   *message);
size_t jaegertracing__protobuf__baggage__baggage_restriction__pack
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestriction   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__baggage__baggage_restriction__pack_to_buffer
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestriction   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Baggage__BaggageRestriction *
       jaegertracing__protobuf__baggage__baggage_restriction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__baggage__baggage_restriction__free_unpacked
                     (Jaegertracing__Protobuf__Baggage__BaggageRestriction *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest methods */
void   jaegertracing__protobuf__baggage__baggage_restriction_request__init
                     (Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest         *message);
size_t jaegertracing__protobuf__baggage__baggage_restriction_request__get_packed_size
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest   *message);
size_t jaegertracing__protobuf__baggage__baggage_restriction_request__pack
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__baggage__baggage_restriction_request__pack_to_buffer
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest *
       jaegertracing__protobuf__baggage__baggage_restriction_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__baggage__baggage_restriction_request__free_unpacked
                     (Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest *message,
                      ProtobufCAllocator *allocator);
/* Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse methods */
void   jaegertracing__protobuf__baggage__baggage_restriction_response__init
                     (Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse         *message);
size_t jaegertracing__protobuf__baggage__baggage_restriction_response__get_packed_size
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse   *message);
size_t jaegertracing__protobuf__baggage__baggage_restriction_response__pack
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse   *message,
                      uint8_t             *out);
size_t jaegertracing__protobuf__baggage__baggage_restriction_response__pack_to_buffer
                     (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse   *message,
                      ProtobufCBuffer     *buffer);
Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse *
       jaegertracing__protobuf__baggage__baggage_restriction_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jaegertracing__protobuf__baggage__baggage_restriction_response__free_unpacked
                     (Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Jaegertracing__Protobuf__Baggage__BaggageRestriction_Closure)
                 (const Jaegertracing__Protobuf__Baggage__BaggageRestriction *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest_Closure)
                 (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest *message,
                  void *closure_data);
typedef void (*Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse_Closure)
                 (const Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_Service Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_Service;
struct _Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_Service
{
  ProtobufCService base;
  void (*get_baggage_restrictions)(Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_Service *service,
                                   const Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest *input,
                                   Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse_Closure closure,
                                   void *closure_data);
};
typedef void (*Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_ServiceDestroy)(Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_Service *);
void jaegertracing__protobuf__baggage__baggage_restriction_manager__init (Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_Service *service,
                                                                          Jaegertracing__Protobuf__Baggage__BaggageRestrictionManager_ServiceDestroy destroy);
#define JAEGERTRACING__PROTOBUF__BAGGAGE__BAGGAGE_RESTRICTION_MANAGER__BASE_INIT \
    { &jaegertracing__protobuf__baggage__baggage_restriction_manager__descriptor, protobuf_c_service_invoke_internal, NULL }
#define JAEGERTRACING__PROTOBUF__BAGGAGE__BAGGAGE_RESTRICTION_MANAGER__INIT(function_prefix__) \
    { JAEGERTRACING__PROTOBUF__BAGGAGE__BAGGAGE_RESTRICTION_MANAGER__BASE_INIT,\
      function_prefix__ ## get_baggage_restrictions  }
void jaegertracing__protobuf__baggage__baggage_restriction_manager__get_baggage_restrictions(ProtobufCService *service,
                                                                                             const Jaegertracing__Protobuf__Baggage__BaggageRestrictionRequest *input,
                                                                                             Jaegertracing__Protobuf__Baggage__BaggageRestrictionResponse_Closure closure,
                                                                                             void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor jaegertracing__protobuf__baggage__baggage_restriction__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__baggage__baggage_restriction_request__descriptor;
extern const ProtobufCMessageDescriptor jaegertracing__protobuf__baggage__baggage_restriction_response__descriptor;
extern const ProtobufCServiceDescriptor jaegertracing__protobuf__baggage__baggage_restriction_manager__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_baggage_2eproto__INCLUDED */
